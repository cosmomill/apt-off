#!/bin/sh
#
# Copyright 2006-2018, Goulven Guillard.
# Copyright 2018, Rene Kanzler.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

BOLD="\\033[1;39m"
NORMAL="\\033[0;39m"
GREEN="\\033[32m"
RED="\\033[31m"
PINK="\\033[35m"
BLUE="\\033[34m"

SCRIPT_DIR="$( cd "$( dirname "$0" )" && pwd )"


##################
## Display help	##
##################
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
	echo -e "\\033[2J\\033[0;0f$BOLD$BLUE""NAME"$NORMAL
	echo -e "\tapt-off\n"
	echo -e $BOLD$BLUE"SYNOPSIS"$NORMAL
	echo -e $GREEN"\tapt-off [option] [packages]\n"$NORMAL
	echo -e $BOLD$BLUE"DESCRIPTION"$NORMAL
	echo -e "\t$GREEN""apt-off$NORMAL is a script designed to download and install packages"
	echo -e "\twithout the apt tool. It proceeds in three steps:"
	echo -e "\t1- packages selection (option -g)"
	echo -e "\t2- packages download (option -d)"
	echo -e "\t3- packages installation (option -x)\n"
	echo -e $BOLD$BLUE"WARNING"$NORMAL
	echo -e $BOLD$RED"\tCAUTION :$NORMAL the installation of packages"
	echo -e "\toption can pose some risks. You are strongly encouraged to"
	echo -e "\tsimulate these operations with apt-get before to use apt-off."
	echo -e "\tThe author cannot be considered as responseable for any problem.\n"
fi;


######################
## Display options	##
######################
if [[ "$1" == "-h" || "$1" == "--help" || "$1" == "-o" || "$1" == "--options" ]]; then
	echo -e $BOLD$BLUE"OPTIONS"$NORMAL
	echo -e $GREEN"\t-c$NORMAL ou$GREEN --configure$NORMAL"
	echo -e "\tDownload apt configuration files.\n"
	echo -e $GREEN"\t-d$NORMAL ou$GREEN --download$NORMAL"
	echo -e "\tDownload packages\n"
	echo -e $GREEN"\t-g$NORMAL or$GREEN --generate$BLUE [package1 package2 ...]$NORMAL"
	echo -e "\tGenerate packages list, stored in the $BLUE offline.packages$NORMAL file.\n"
	echo -e $GREEN"\t-h$NORMAL or$GREEN --help"$NORMAL
	echo -e "\tPrint this help.\n"
	echo -e $GREEN"\t-o$NORMAL or$GREEN --options$NORMAL"
	echo -e "\tDisplay options.\n"
	echo -e $GREEN"\t-x$NORMAL or$GREEN --extract$BLUE [package1 package2 ...]$NORMAL"
	echo -e "\tExtract and install packages.\n"
	echo -e $GREEN"\t-i$NORMAL or$GREEN --install$BLUE [package1 package2 ...]$NORMAL"
	echo -e "\tConfigure apt-off, download and install packages.\n"

	if [[ "$1" == "-h" || "$1" == "--help" ]]; then	
		echo -e $BOLD$BLUE"COPYRIGHT"$NORMAL
		echo -e "\tCopyright 2006-2018, Goulven Guillard."
		echo -e "\tCopyright 2018, Rene Kanzler."
		echo -e "\tThis program is copyleft : copy, modification and diffusion are"
		echo -e "\tauthorized and encouraged if they are free.\n"
	fi;


##########################################
## Download of apt configuration files	##
##########################################
elif [[ "$1" == "-c" || "$1" == "--configure" ]]; then
	if [[ -e /var/lib/apt/config_files/config_apt ]]; then
		cd /var/lib/apt/config_files
		sh -x ./config_apt
	else
		echo -e "You didn't execute$GREEN apt-off -g$NORMAL yet, or you have deleted the$VERT config_files$NORMAL directory and the$VERT config_apt$NORMAL file there was in it... Please restart all the procedure."
	fi;


##########################
## Packages selection	##
##########################
elif [[ "$1" == "-g" || "$1" == "--generate" ]]; then
	if [[ `ls /var/lib/apt/lists/ | grep binary-amd64_Packages | wc -l` -eq 0 ]]; then
		if [[ ! -e /var/lib/apt/config_files ]]; then
			mkdir -p /var/lib/apt/config_files
			awk '($1=="deb"||$1=="deb-src")&&!match($2,"cdrom"){split($2,A,"/");for(i=4;i<=NF;++i) print "wget -O "A[3]"_"A[4]"_dists_"$3"_"$i"_binary-amd64_Packages.gz "$2"dists/"$3"/"$i"/binary-amd64/Packages.gz"}' < /etc/apt/sources.list > /var/lib/apt/config_files/config_apt
			echo -e "WARNING : Your computer isn't correctly configured in order to use the apt tool."
			echo -e "This program will configure it for you. You now have to execute the$VERT apt-off -c$NORMAL"
			echo -e "command. The configuration will end automatically next time you will use apt-off."
			exit
		elif [[ `ls /var/lib/apt/config_files | grep gz | wc -l` -gt 0 ]]; then
			cp /var/lib/apt/config_files/*.gz /var/lib/apt/lists/
			gunzip /var/lib/apt/lists/*.gz
		else
			echo -e "You must first run$VERT apt-off -c$NORMAL!"
			exit
		fi;
	fi;

	if [[ -e /var/lib/apt/offline.packages ]]; then
		echo "WARNING : The offline.packages file already exists, do you want to overwrite it (if not, the packages will be added to the existing list) ? (y/n)"
		read OVERWRITE
	fi;

	if [[ "$OVERWRITE" == "y" ]]; then
		echo "cd /var/lib/apt/deb" > offline.packages
		echo "cd /var/lib/apt/deb" > install.packages
	else
		echo "cd /var/lib/apt/deb" >> offline.packages
		echo "cd /var/lib/apt/deb" >> install.packages
	fi;

	if [[ "$#" -lt 2 ]]; then
		echo "WARNING : You have to indicate which packages you want to install!"
		exit
	else
		for i in "${@:2}"; do
			awk '($1 == "Package:" || $1 == "Filename:") { print $2 }' /var/lib/apt/lists/*_binary-amd64_Packages | sed 'N;s/\n/ /' | awk -v deb="${i}" '($1 == deb) {print $2}' >> /var/lib/apt/.offline_tmp
		done;

		REPOSITORY=`awk '($1 == "deb") { print $2 }' /etc/apt/sources.list`
		awk -v repo="${REPOSITORY}" '{print "wget -O " gensub( ".*/", "", $1 ) " "repo$1}' < /var/lib/apt/.offline_tmp >> /var/lib/apt/offline.packages
		awk '{print "dpkg -i -F depends " gensub( ".*/", "", $1 )}' < /var/lib/apt/.offline_tmp >> /var/lib/apt/install.packages

		rm -f /var/lib/apt/.offline_tmp
	fi;


##########################
## Packages download	##
##########################
elif [[ "$1" == "-d" || "$1" == "--download" ]]; then
	if [[ ! -e /var/lib/apt/deb ]]; then
		mkdir -p /var/lib/apt/deb
	fi;

	if [[ -e /var/lib/apt/offline.packages ]]; then
		sh -x /var/lib/apt/offline.packages
	else
		echo -e "You didn't execute$GREEN apt-off -g$NORMAL yet!"
		exit
	fi;


##########################
## Packages extraction	##
##########################
elif [[ "$1" == "-x" || "$1" == "--extract" ]]; then
	if [[ -e /var/lib/apt/install.packages ]]; then
		sh -x /var/lib/apt/install.packages
	else
		echo -e "You didn't execute$GREEN apt-off -g$NORMAL yet!"
		exit
	fi;

##############################
## Packages installation	##
##############################
elif [[ "$1" == "-i" || "$1" == "--install" ]]; then
	if [[ "$#" -lt 2 ]]; then
		echo "WARNING : You have to indicate which packages you want to install!"
		exit
	else
		$SCRIPT_DIR/apt-off -g && $SCRIPT_DIR/apt-off -c && $SCRIPT_DIR/apt-off -g ${@:2} && $SCRIPT_DIR/apt-off -d && $SCRIPT_DIR/apt-off -x
	fi;

##########################
## Display usage rules	##
##########################
else
	$SCRIPT_DIR/apt-off -o


fi;
## End of apt-off.